<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/resources/**" security="none"/>
    <http pattern="/webjars/**" security="none"/>

    <beans:bean class="org.springframework.security.crypto.factory.PasswordEncoderFactories" id="passwordEncoder" factory-method="createDelegatingPasswordEncoder"/>

    <http>
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/register" access="isAnonymous()"/>

        <intercept-url pattern="/**/admin/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />

        <intercept-url pattern="/**" access="isAuthenticated()"/>

        <form-login login-page="/login" default-target-url="/menu"
                    authentication-failure-url="/login?error=true"
                    login-processing-url="/spring_security_check"/>
        <logout logout-success-url="/login"/>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
        <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
        <!--
        <authentication-provider>
            <password-encoder ref="noopEncoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT email, password, enabled FROM users WHERE email = ?"
                               authorities-by-username-query="
                              SELECT u.email, r.role FROM users u, user_roles r WHERE u.role_id = r.id AND u.email = ?"/>
        </authentication-provider>
        -->
    </authentication-manager>

</beans:beans>